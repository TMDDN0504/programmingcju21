#include <iostream>
#include <cstdlib>
#include <ctime>
#include <algorithm>
#include <iomanip>

// 배열 출력 함수
void PrintArray(double* arr, int size) {
    for (int i = 0; i < size; ++i) {
        std::cout << std::fixed << std::setprecision(2) << arr[i] << " ";
    }
    std::cout << std::endl;
}

// 배열 정렬 함수
void CalcSortArray(double* arr, int size, bool ascending = true) {
    if (ascending) {
        // 오름차순 정렬
        std::sort(arr, arr + size);
    } else {
        // 내림차순 정렬
        std::sort(arr, arr + size, std::greater<double>());
    }
}

int main() {
    const int arraySize = 10;
    double array[arraySize];

    // 랜덤 생성 준비
    std::srand(std::time(0));

    // 배열 랜덤 생성 (-100.0 ~ +100.0 사이의 실수)
    for (int i = 0; i < arraySize; ++i) {
        array[i] = -100.0 + static_cast<double>(std::rand()) / (static_cast<double>(RAND_MAX / 200.0));
    }

    // 초기 상태 출력
    std::cout << "랜덤 생성된 배열:" << std::endl;
    PrintArray(array, arraySize);

    // 오름차순 정렬
    CalcSortArray(array, arraySize, true);
    std::cout << "오름차순 정렬된 배열:" << std::endl;
    PrintArray(array, arraySize);

    // 내림차순 정렬
    CalcSortArray(array, arraySize, false);
    std::cout << "내림차순 정렬된 배열:" << std::endl;
    PrintArray(array, arraySize);

    return 0;
}
